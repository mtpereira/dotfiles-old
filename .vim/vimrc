runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()

syntax on
set background=dark
colorscheme solarized
set number
set relativenumber

filetype plugin indent on
set tabstop=4
set expandtab
set softtabstop=4
set shiftwidth=4
filetype indent on
set paste
set textwidth=80
set wrapmargin=2
set breakindent
set autoread

highlight OverLenght ctermbg=darkred ctermfg=white
call matchadd ('OverLenght', '\%81v', 100)

highlight ExtraWhitespace ctermbg=red guibg=red
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/

fun! StripTrailingWhitespaces()
    let l = line(".")
    let c = col(".")
    let _s=@/
    let @/=_s
    %s/\s\+$//e
    call cursor(l, c)
endfun

" Append modeline after last line in buffer.
" Use substitute() instead of printf() to handle '%%s' modeline in LaTeX
" files.
function! AppendModeline()
  let l:modeline = printf(" vim: set ts=%d sw=%d tw=%d %set :",
        \ &tabstop, &shiftwidth, &textwidth, &expandtab ? '' : 'no')
  let l:modeline = substitute(&commentstring, "%s", l:modeline, "")
  call append(line("$"), l:modeline)
endfunction
nnoremap <silent> <Leader>ml :call AppendModeline()<CR>

autocmd FileType c,cpp,java,php,ruby,python,perl,bash,sh autocmd BufWritePre
\ <buffer> :call StripTrailingWhitespaces()

" Synatic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_signs = 1

" YouCompleteMe settings
let g:ycm_register_as_syntastic_checker = 0

" ctrlp
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_max_height = 25

" Silver searcher (ag)
" Taken from https://robots.thoughtbot.com/faster-grepping-in-vim
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
nnoremap \ :Ag<SPACE>

" Open quickfix restuls in tabs
" Taken from http://stackoverflow.com/questions/6852763/vim-quickfix-list-launch-files-in-new-tab#6853779
:set switchbuf+=usetab,newtab

" NERD Tree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Terraform
let g:terraform_fmt_on_save = 1

